{"version":3,"file":"static/js/930.aab32e0f.chunk.js","mappings":"yNAEaA,EAAmBC,EAAAA,GAAAA,GAAH,0iCAEP,qBAAGC,MAAkBC,mBAArB,IACX,qBAAGD,MAAkBE,aAArB,IA2DEC,EAAcJ,EAAAA,GAAAA,GAAH,sFAEb,qBAAGC,MAAkBI,cAArB,I,SCpBX,EA1CoB,SAAC,GAEd,IAAD,IADJC,OAAUC,EACN,EADMA,GAAIC,EACV,EADUA,iBAAkBC,EAC5B,EAD4BA,MAAOC,EACnC,EADmCA,aAAcC,EACjD,EADiDA,OAE7CC,EADJ,EADyDC,KAErDD,OACR,OACE,SAAC,IAAD,CAAeE,GAAE,mBAAcP,GAA/B,UACE,UAACR,EAAD,YACE,gBAAIgB,UAAU,aAAd,WACE,wBACGH,IAAU,6BACT,mCADS,IACOA,EAAOI,KAAI,SAAAC,GAAK,OAAIA,CAAJ,IAAWC,KAAK,YAGpD,2BACE,6BACE,8CADF,IAC6BR,MAE7B,6BACE,mCADF,IACkBC,YAItB,gBAAKQ,IAAG,UAAKX,EAAL,eAAoCY,IAAI,oBAChD,SAAChB,EAAD,UAAcK,QAIrB,C","sources":["components/CoursesCard/CourseesCard.styled.js","components/CoursesCard/CoursesCard.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CustomCourseCard = styled.li`\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  background-color: ${({ theme }) => theme.cardBackgroundColor};\n  color: ${({ theme }) => theme.cardMainColor};\n  position: relative;\n  transition: 0.3s;\n\n  &:hover .top-slider {\n    height: 300px;\n  }\n\n  &::after {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 300px;\n    background-image: linear-gradient(#0000003b, #0000003b);\n  }\n\n  &:hover {\n    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\n    scale: 1.02;\n  }\n\n  & img {\n    object-fit: cover;\n\n    width: 100%;\n    height: 300px;\n  }\n\n  & .top-slider {\n    position: absolute;\n    padding: 0;\n    background-color: #ffffffe8;\n    text-align: center;\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 25px;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 0;\n    transition: 0.3s;\n\n    & li {\n      padding: 0 30px;\n    }\n\n    & li:nth-of-type(2) {\n      display: flex;\n      gap: 40px;\n    }\n  }\n`;\n\nexport const CourseTitle = styled.h3`\n  text-align: center;\n  color: ${({ theme }) => theme.cardTitleColor};\n  padding: 5px 0 25px;\n`;\n","import { CustomNavLink } from 'components/Custom/CustomNavLink/CustomNavLink.styled';\nimport PropTypes from 'prop-types';\nimport { CourseTitle, CustomCourseCard } from './CourseesCard.styled';\n\nconst CoursesCard = ({\n  course: { id, previewImageLink, title, lessonsCount, rating, meta },\n}) => {\n  const { skills } = meta;\n  return (\n    <CustomNavLink to={`/details/${id}`}>\n      <CustomCourseCard>\n        <ul className=\"top-slider\">\n          <li>\n            {skills && <span>\n              <b>Skills:</b> {skills.map(skill => skill).join(', ')}\n            </span>}\n          </li>\n          <li>\n            <span>\n              <b>Number of lessons:</b> {lessonsCount}\n            </span>\n            <span>\n              <b>Rating:</b> {rating}\n            </span>\n          </li>\n        </ul>\n        <img src={`${previewImageLink}/cover.webp`} alt=\"courses__image\" />\n        <CourseTitle>{title}</CourseTitle>\n      </CustomCourseCard>\n    </CustomNavLink>\n  );\n};\n\nCoursesCard.propTypes = {\n  course: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    previewImageLink: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    lessonsCount: PropTypes.number.isRequired,\n    rating: PropTypes.number.isRequired,\n    meta: PropTypes.shape({\n      skills: PropTypes.arrayOf(PropTypes.string)\n    })\n  }).isRequired\n};\n\nexport default CoursesCard;\n"],"names":["CustomCourseCard","styled","theme","cardBackgroundColor","cardMainColor","CourseTitle","cardTitleColor","course","id","previewImageLink","title","lessonsCount","rating","skills","meta","to","className","map","skill","join","src","alt"],"sourceRoot":""}